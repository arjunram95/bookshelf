{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marju\\\\OneDrive\\\\Desktop\\\\Capstone_Project\\\\GoogleBooks\\\\bookshelf\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import useAuth from \"../hooks/useAuth\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000/api/posts\";\nconst PostForm = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const storedData = localStorage.getItem(\"user\");\n  const parsedData = JSON.parse(storedData);\n  let {\n    email,\n    name,\n    token,\n    _id\n  } = parsedData;\n  const getPosts = async token => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.get(API_URL, config);\n      console.log(\"posts fetched from server: \", response);\n    } catch (error) {\n      const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(message);\n    }\n  };\n  const createPost = async (text, token) => {\n    const postData = {\n      bookId: \"56\",\n      text: text,\n      user: _id\n    };\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const response = await axios.post(API_URL, postData, config);\n      console.log(\"post created: \", response);\n    } catch (error) {\n      const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      console.log(message);\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    createPost(text, token);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"text\",\n          id: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block\",\n          type: \"submit\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","axios","useParams","jsxDEV","_jsxDEV","API_URL","PostForm","_s","text","setText","storedData","localStorage","getItem","parsedData","JSON","parse","email","name","token","_id","getPosts","config","headers","Authorization","response","get","console","log","error","message","data","toString","createPost","postData","bookId","user","post","onSubmit","e","preventDefault","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/marju/OneDrive/Desktop/Capstone_Project/GoogleBooks/bookshelf/frontend/src/components/PostForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// import useAuth from \"../hooks/useAuth\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst API_URL = \"http://localhost:5000/api/posts\";\r\n\r\nconst PostForm = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const storedData = localStorage.getItem(\"user\");\r\n  const parsedData = JSON.parse(storedData);\r\n  let { email, name, token, _id } = parsedData;\r\n\r\n  const getPosts = async (token) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const response = await axios.get(API_URL, config);\r\n      console.log(\"posts fetched from server: \", response);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      console.log(message);\r\n    }\r\n  };\r\n  const createPost = async (text, token) => {\r\n    const postData = {\r\n      bookId: \"56\",\r\n      text: text,\r\n      user: _id,\r\n    };\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const response = await axios.post(API_URL, postData, config);\r\n      console.log(\"post created: \", response);\r\n    } catch (error) {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n      console.log(message);\r\n    }\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createPost(text, token);\r\n  };\r\n  return (\r\n    <section className=\"form\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"text\">Post</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"text\"\r\n            id=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button className=\"btn btn-block\" type=\"submit\">\r\n            Add Post\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}